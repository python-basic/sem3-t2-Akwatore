# 2.1. Разработать скрипт с функцией, которая строит таблицу истинности для логического выражения (по вариантам) для двух и трех аргументов (используются различные наборы значений аргументов). 

---- https://repl.it/@ulyaakwatore/Tema-2-ISR-21-22 ----

def func1(a,b):
  return int(not a and not b)

def f1():
  print('_'*21)
  print(chr(124)+'  A'+'  '+chr(124)+' '+' B  '+chr(124)+' '+'A ↓ B '+''+chr(124))
  print('-'*21)
  for a1 in range(0,2):
    for b1 in range(0,2):
      print('| ', a1,' | ', b1 , ' |  ',func1(a1,b1), '  |');
      print('-'*21) 

f1()

def func2(a,b,c):
  return int(1)

def f2():
  print('_'*40)
  print(chr(124)+'  A'+'  '+chr(124)+' '+' B  '+chr(124)+' '+' C  '+chr(124)+' ((C∨B)→B)∧(A∧ B)→B '+''+chr(124))
  print('-'*40)
  for a1 in range(0,2):
    for b1 in range(0,2):
      for c1 in range(0,2):
        print('| ', a1,' | ', b1 , ' | ', c1, ' |         ' ,func2(a1,b1,c1), '        |');
        print('-'*40) 

f2()

def func3(a,b):
  return int((not a and not b) or (a and not b))

def f3():
  print('_'*25)
  print(chr(124)+'  A'+'  '+chr(124)+' '+' B  '+chr(124)+' '+' A∧¬B↔A∨B '+''+chr(124))
  print('-'*25)
  for a1 in range(0,2):
    for b1 in range(0,2):
      print('| ', a1,' | ', b1 , ' |    ',func3(a1,b1), '    |');
      print('-'*25) 

f3()


# 2.2. Разработать программу, которая выводит на экран с помощью ASCII-графики таблицу истинности на основе переданных ей на вход аргументов (логическое выражение, аргументы, результат вычисления выражения). Формирование отчета по выполнению задания и размещение его в портфолио, персональном репозитории. 

---- https://repl.it/@ulyaakwatore/Tema-2-ISR-21-22 ----

print('-'*41)
print(chr(124) + '  A'+'  '+chr(124)+'  B'+'  '+ chr(124)+ '  '+'A ∧ B  ' + chr(124)+'  '+ 'A ∨ B'+'  '+ chr(124)+ '  '+'A→B  '+chr(124))
print('-'*41)
a = False
b = False
print(chr(124)+ '  ' + str(int(a))+ '  '+chr(124)+'  '+ str(int(b))+'  '+ chr(124)+ '    '+str(int(a and b))+ '    ' + chr(124)+'    '+ str(int(a or b))+'    '+ chr(124)+ '   '+str(int(not a or b))+ '   '+chr(124))
print('-'*41)
a = False
b = True
print(chr(124)+ '  ' + str(int(a))+ '  '+chr(124)+'  '+ str(int(b))+'  '+ chr(124)+ '    '+str(int(a and b))+ '    ' + chr(124)+'    '+ str(int(a or b))+'    '+ chr(124)+ '   '+str(int(not a or b))+ '   '+chr(124))
print('-'*41)
a = True
b = False
print(chr(124)+ '  ' + str(int(a))+ '  '+chr(124)+'  '+ str(int(b))+'  '+ chr(124)+ '    '+str(int(a and b))+ '    ' + chr(124)+'    '+ str(int(a or b))+'    '+ chr(124)+ '   '+str(int(not a or b))+ '   '+chr(124))
print('-'*41)
a = True
b = True
print(chr(124)+ '  ' + str(int(a))+ '  '+chr(124)+'  '+ str(int(b))+'  '+ chr(124)+ '    '+str(int(a and b))+ '    ' + chr(124)+'    '+ str(int(a or b))+'    '+ chr(124)+ '   '+str(int(not a or b))+ '   '+chr(124))
print('-'*41)

# 2.3. Разработать скрипт с функцией, которая для ряда Фибоначчи, где количество элементов, n = 22, возвращает подмножество значений или единственное значение (по вариантам). Для нахождения элемента требуется использовать слайсы. Формирование отчета по выполнению задания и размещение его в портфолио, персональном репозитории. 



# 2.4. Напишите программу с функцией, в которой будет реализовано решение физической задачи (по вариантам). Например: ящик, имеющий форму куба с ребром a см без одной грани, нужно покрасить со всех сторон снаружи. Найдите площадь поверхности, которую необходимо покрасить. Ответ дайте в квадратных сантиметрах. Решение задачи оформите в виде функции square(a), которая возвращает значение s. Например, при значении a = 30, square(30) вернет s = 4500. Формирование отчета по выполнению задания и размещение его в портфолио, персональном репозитории.
